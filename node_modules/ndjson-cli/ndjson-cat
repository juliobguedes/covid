#!/usr/bin/env node

var fs = require("fs"),
    commander = require("commander"),
    output = require("./output");

commander
    .version(require("./package.json").version)
    .usage("[options] [filesâ€¦]")
    .description("Concatenate JSON values to form a newline-delimited JSON stream.")
    .parse(process.argv);

if (commander.args.length < 1) {
  commander.args[0] = "-";
}

var i = -1, n = commander.args.length, task = Promise.resolve();
while (++i < n) task = task.then(cat(commander.args[i]));
task.catch(function(error) { console.error(error); });

function cat(input) {
  return new Promise(function(resolve, reject) {
    var data = [], stream = input === "-" ? process.stdin : fs.createReadStream(input);
    stream
        .on("data", function(d) { data.push(d); })
        .on("error", reject)
        .on("end", function() {
          try {
            var d = JSON.parse(Buffer.concat(data));
          } catch (e) {
            console.error((input === "-" ? "stdin" : input) + ": SyntaxError: " + e.message);
            process.exit(1);
          };
          output(d);
          resolve();
        });
  });
}
